/* Additional tests for alt_solve. */

(load("unwind_protect"),0);
0$

nicedummies(solve(0.0,x));
[x=%r0]$

errcatch(solve([x>0],x));
[]$

solve([x=1,x=1]);
[x=1]$

solve(x^a = 5,x);
[x=5^(1/a)]$

(a : b, b : c, c : d, d : e, x : y, y: z ,0);
0$

solve([a*x - b],[x]);
[y=c/b]$

(remvalue(a,b,c,d,x,y),0);
0$

solve([0],[]);
all$

solve([0,0],[]);
all$

block([solveexplicit : false, solvedecomposes : true], multiplicities : [], solve(z*(1+z^3+z^5),z),multiplicities);
[1,1]$

/* To check if the Lambert W solve code sets the multiplicities correctly, set it to [28]*/
solve(x^28=0,x);
[x=0]$

block([solve_inverse_package : multivalued_inverse], nicedummies(solve(x * exp(x)= 107,x)));
generalized_lambert_w(%z0,107)$

multiplicities;
[1]$

block([solve_inverse_package : single_valued_inverse], nicedummies(solve(x * exp(x)=8,x)));
lambert_w(8)$
multiplicities;
[1]$

/* expunge spurious solution x=0 */
solve(x*(log(x) - 1)=0,x);
[x=%e]$

/* make sure find both solutions */
solve(x*(log(x+107) - 1)=0,x);
[x=%e-107,x=0]$


block([cntx : supcontext()], unwind_protect( (activate(cntx), assume(not equal(a,-107)), print(facts()), solve((x+8)*(x-a)*(log(x+107) - 1),x)), killcontext(cntx)));
[x=%e-107,x=a,x=-8]$

block([cntx :supcontext()], unwind_protect((activate(cntx), assume(a < -107), solve((x+8)*(x-a)*(log(x+107) - 1),x)), killcontext(cntx)));
[x=%e-107,x=a,x=-8]$

/* See Maxima bug #963 linsolve incorrect result */
(eqs : [A[4]+A[3]+A[2]+A[1] = 1,-A[2]*DY/(2*coeff_y)-A[1]*DY/(2*coeff_y)+A[4]*DY/2+A[3]*DY/2
= 0, -A[4]*DX/(2*coeff_x)+A[3]*DX/(2*coeff_x)-A[2]*DX/(2*coeff_x)
+ A[1]*DX/(2*coeff_x) = 0],0);
0$

ratsimp(subst(linsolve(eqs,  [A[1],A[2],A[3],A[4]]), eqs));
[1=1,0=0,0=0]$

/* See Maxima bug #3042 linsolve() incorrectly solves underdetermined linear system with symbolic coefficients */
(eqs : [-((%i*(y+x)*f1*w)/(f*r)),((f*(y*l^2+y*l-4*z-2*y))/(r^3))]/f*r^3,0);
0$

ratsimp(subst(linsolve(eqs,[x,y,z]),eqs));
[0,0]$

(remvalue(eqs),0);
0$

/* did any contexts leak?*/
contexts;
[initial,global]$
