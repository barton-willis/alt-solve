(checked_sol(p,x) := block([sol : solve(p,x)],
   map(lambda([s], ratsimp(sqrtdenest(subst(s,p)))), sol)),0);
0$

/* degree one */

ssolve(x=107,x);
[x=107]$

multiplicities;
[1]$

ssolve(x-107,x);
[x=107]$

multiplicities;
[1]$

ssolve(2*x-107,x);
[x=107/2]$

multiplicities;
[1]$

ssolve(2*x-107,x);
[x=107/2]$

multiplicities;
[1]$

ssolve(-2*x-107,x);
[x=-107/2]$

multiplicities;
[1]$

ssolve(m*x+b=0,x);
[x=-b/m]$

multiplicities;
[1]$

ssolve(m*x=0,x);
[x=0]$

multiplicities;
[1]$

ssolve(%i*x=0,x);
[x=0]$

multiplicities;
[1]$

ssolve(%i*x=5+%i,x);
[x=1-5*%i]$

multiplicities;
[1]$

/*degree two more-or-less*/

ssolve((x-3)*(x-5),x);
[x=3,x=5]$

multiplicities;
[1,1]$

ssolve((x-3)^2*(x-5),x);
[x=3,x=5]$

multiplicities;
[2,1]$

ssolve((x-3)*(x-5)^2,x);
[x=3,x=5]$

multiplicities;
[1,2]$

ssolve((x-3)^3*(x-5)^2,x);
[x=3,x=5]$

multiplicities;
[3,2]$

ssolve(-107*(x-3)^3*(x-5)^2,x);
[x=3,x=5]$

multiplicities;
[3,2]$

checked_sol(x^2+x+1,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(x^2+2*x+1,x);
[0]$

multiplicities;
[2]$

checked_sol(x^2-2*x+1,x);
[0]$

multiplicities;
[2]$

checked_sol(a*x^2+b*x+c,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(-a*x^2+b*x+c,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(a*x^2-b*x+c,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(a*x^2-b*x-c,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(9*(x - 3)^2 + 42,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(-2*(x - 3)^2 + 42,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(a*(x - b)^2 + c,x);
[0,0]$

multiplicities;
[1,1]$

checked_sol(%i*x^2 + (3-2*%i)+x + 107,x);
[0,0]$

multiplicities;
[1,1]$

ssolve(sqrt(5)*x^2-2*sqrt(3)*sqrt(5)*x+3*sqrt(5),x);
[x=sqrt(3)]$

multiplicities;
[2]$

/*degree three and related */

checked_sol((x-3)*(x-4)*(x-7),x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol(%i*(x-3)*(x-4)*(x-7),x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol((x-3)*(x^2+x+1),x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol(a*x^3+b*x^2+c*x+d,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol(a*x^3+c*x+d,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol(a*x^3+b*x^2+d,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol(a*x^3+b*x+d,x);
[0,0,0]$

multiplicities;
[1,1,1]$

solve(a*x^3+b*x^2,x);
[x=0,x=-b/a]$

multiplicities;
[2,1]$

checked_sol(a*(x-4)^3+1,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol((x-4)^3+1,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol((x+4*a)^3+1,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol((x+4*a)^3-b,x);
[0,0,0]$

multiplicities;
[1,1,1]$

checked_sol((x+4*a)^3-b*x,x);
[0,0,0]$

multiplicities;
[1,1,1]$

ssolve((x-2)^3*(x-4)^2*(x-6),x);
[x=2,x=4,x=6]$

multiplicities;
[3,2,1]$

ssolve((x-2)^107*(x-4)^2*(x-6),x);
[x=2,x=4,x=6]$

multiplicities;
[107,2,1]$

ssolve((x-2)*(x-4)^107*(x-6),x);
[x=2,x=4,x=6]$

multiplicities;
[1,107,1]$

ssolve((x-2)*(x-4)*(x-6)^107,x);
[x=2,x=4,x=6]$

multiplicities;
[1,1,107]$

ssolve(%i*(x-2)*(x-4)*(x-6)^107,x);
[x=2,x=4,x=6]$

multiplicities;
[1,1,107]$

/* tests for special case branch (zero discriminant) in my-solve-cubic */
block([solvefactors : false], solve( x^3-3*sqrt(5)*x^2+15*x-5^(3/2),x));
[x=sqrt(5)]$

multiplicities;
[3]$

block([solvefactors : false], solve(x^3-3*%i*x^2-3*sqrt(2)*x^2+3*2^(3/2)*%i*x+3*x-5*%i+sqrt(2),x));
[x=%i+sqrt(2)]$

multiplicities;
[3]$

block([solvefactors : false], solve(-%i*x^3+x^3+18*%i*x^2-18*x^2-108*%i*x+108*x+216*%i-216,x));
[x=6]$

multiplicities;
[3]$

block([solvefactors : false], solve(x^3-11*x^2+40*x-48,x));
[x=4,x=3]$

multiplicities;
[2,1]$

block([solvefactors : false], ssolve(x^3-11*x^2+40*x-48,x));
[x=3,x=4]$

multiplicities;
[1,2]$

block([solvefactors : false], ssolve(%i*x^3+x^3-11*%i*x^2-11*x^2+40*%i*x+40*x-48*%i-48,x));
[x=3,x=4]$

multiplicities;
[1,2]$

block([solvefactors : false], ssolve(x^3+2*%i*x^2+sqrt(3)*x^2+2*sqrt(3)*%i*x-x-sqrt(3),x));
[x=-sqrt(3),x=-%i]$

multiplicities;
[1,2]$

/*quartic & related */

checked_sol(x^4-x^3+x+1,x);
[0,0,0,0]$

multiplicities;
[1,1,1,1]$

checked_sol(x^4-2*x^3+x+1,x);
[0,0,0,0]$

multiplicities;
[1,1,1,1]$


ssolve(x^4+x^3+x+1,x);
[x=-1,x=-((sqrt(3)*%i-1)/2),x=(sqrt(3)*%i+1)/2]$

multiplicities;
[2,1,1]$

checked_sol(x^4+x^3+x+1,x);
[0,0,0]$

checked_sol(x^4+a*x^2+b,x);
[0,0,0,0]$

multiplicities;
[1,1,1,1]$

checked_sol(a*x^4+b*x^2+c,x);
[0,0,0,0]$

multiplicities;
[1,1,1,1]$

checked_sol(x^4+x,x);
[0,0,0,0]$

multiplicities;
[1,1,1,1]$

(sol : solve(a*x^4+b*x^3+c*x^2+d*x+e,x),0);
0$

(extra_simp(e) :=
  block([algebraic : true, domain : complex],
     radcan(expand(rootscontract(ratsimp(sqrtdenest(e)))))),0);
0$

block([domain : real], ratsimp(extra_simp(rectform(block([algebraic :Â true, domain : complex],
   subst([a=1,b=0,c=0,d=0,e=1], sol))))));
[x=-((sqrt(2)*%i+sqrt(2))/2),
 x=-((sqrt(2)*%i-sqrt(2))/2),
 x=(sqrt(2)*%i-sqrt(2))/2,
 x=(sqrt(2)*%i+sqrt(2))/2]$

subst([a=-1,b=0,c=2, d=0,e=-1], sol);
[x=1,x=1,x=-1,x=-1]$

(sol : solve(x^4+a*x^3 + b*x^2+c*x+d,x),0);
0$

extra_simp(sort(subst([a=1,b=0,c=0,d=27/256],sol)));
[x=-(3/4),x=-(3/4),x=-((sqrt(2)*%i-1)/4),x=(sqrt(2)*%i+1)/4]$

extra_simp(sort(subst([a=-2,b=0,c=0,d=27/16],sol)));
[x=3/2,x=3/2,x=(sqrt(2)*%i-1)/2,x=-((sqrt(2)*%i+1)/2)]$

extra_simp(subst([a=0, c=0,d=b^2/4,b=-25],sol));
[x=-(5/sqrt(2)),x=-(5/sqrt(2)),x=5/sqrt(2),x=5/sqrt(2)]$

checked_sol(x^4+x^2+1,x);
[0,0,0,0]$

multiplicities;
[1,1,1,1]$

/* I'm not sure how to check the solution of a quartic in general--sqrtdenest and friends don't
seem to be up to the task. I'll compromise and do a simple-minded numerical check. */

(numerically_checked_sol(p,x, digits,r) := block([sol : solve(p,x),fpprec : digits,slop : 10^r],
     map(lambda([q], is(q < slop/10^digits)), map(lambda([s], cabs(bfloat(rectform(ratsimp(sqrtdenest(subst(s, p))))))) , sol))),0);
0$

numerically_checked_sol(x^4-2*x^3+x+1,x,25,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x+1,x,10,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x+1,x,20,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x+1,x,40,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x+1,x,80,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x^3+x+1,x,10,1);
[true,true,true]$

numerically_checked_sol(x^4+x+1,x,20,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x+1,x,40,1);
[true,true,true,true]$

numerically_checked_sol(x^4+x+1,x,80,1);
[true,true,true,true]$

numerically_checked_sol(x^4-23*x^3 + x+1,x,10,1);
[true,true,true,true]$

numerically_checked_sol(x^4-23*x^3 + 107*x^2 + x+1,x,10,4);
[true,true,true,true]$

numerically_checked_sol(x^4-23*x^3 + 107*x^2 + x+1,x,20,4);
[true,true,true,true]$

block([domain : complex], numerically_checked_sol(x^4-23*x^3+107*x^2+x+1,x,40,5));
[true,true,true,true]$

/* Quasi-palindromic equation */
(eq : a0*x^4+a1*x^3+a2*x^2+a1*m*x+a0*m^2,0)$
0$

checked_sol(subst([a0=1,a1=1,a2=1,m=1],eq),x);
[0,0,0,0]$

checked_sol(subst([a0=1,a1=1,a2=1,m=-1],eq),x);
[0,0,0,0]$

checked_sol(subst([a0=%i,a1=1,a2=1,m=-1],eq),x);
[0,0,0,0]$

checked_sol(subst([a0=%i,a1=10,a2=1,m=(25-%i)/2],eq),x);
[0,0]$

checked_sol(eq,x);
[0,0,0,0]$

(remvalue(eq),0);
0$

block([sovlefactors : true], checked_sol(737280*z^8-576000*z^5+46080*z^2,z));
[0,0,0,0,0,0,0]$

/* solve 6th degree cyclotomic polynomial */

/* factor of x^7-1 */

/* correct number of solutions? */
cardinality(setify(rectform(solve(x^6+x^5+x^4+x^3+x^2+x+1,x))));
6$

trigrat(checked_sol(x^6+x^5+x^4+x^3+x^2+x+1,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(expand((1+sqrt(5))*(x^6+x^5+x^4+x^3+x^2+x+1)),x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(expand(-1*(x^6+x^5+x^4+x^3+x^2+x+1)),x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

/* factor of x^7+1 */

cardinality(setify(rectform(solve(x^6-x^5+x^4-x^3+x^2-x+1,x))));
6$

trigrat(checked_sol((x^6-x^5+x^4-x^3+x^2-x+1),x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(expand(a * (x^6-x^5+x^4-x^3+x^2-x+1)),x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(expand((-2/3) * (x^6-x^5+x^4-x^3+x^2-x+1)),x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

/* factor of x^9+1 */

cardinality(setify(rectform(solve(x^6-x^3+1,x))));
6$

trigrat(checked_sol(x^6-x^3+1,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(107*x^6-107*x^3+107,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

/* factor of x^9-1 */

cardinality(setify(rectform(solve(x^6+x^3+1,x))));
6$

trigrat(checked_sol(x^6+x^3+1,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(28*x^6+28*x^3+28,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(%pi*x^6+%pi*x^3+%pi,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

/* factor of x^9+1 */

cardinality(setify(rectform(solve(x^6-x^3+1,x))));
6$

trigrat(checked_sol(x^6-x^3+1,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

trigrat(checked_sol(5*x^6-5*x^3+5,x));
[0,0,0,0,0,0]$

multiplicities;
[1,1,1,1,1,1]$

/* standard solve gives messy answer & misses the fact that one root has multiplicity 2*/

ssolve(x^4+x+(81/768)^(1/3),x);
[x=-(1/4^(1/3)),x=-((2^(11/6)*%i-4^(2/3))/4),x=(2^(11/6)*%i+4^(2/3))/4]$

multiplicities;
[2,1,1]$
